9e3d9c4e3f802224436e47e922310b89
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// Mock useStarknet hook to prevent Starknet wallet errors during testing
jest.mock('./hooks/useStarknet', () => {
    const React = require('react');
    return {
        useStarknet: () => {
            const [account, setAccount] = React.useState('0x' + Math.random().toString(16).slice(2));
            const [contract] = React.useState({});
            const [isConnecting, setIsConnecting] = React.useState(false);
            const connectWallet = async () => {
                setIsConnecting(true);
                setAccount('0x' + Math.random().toString(16).slice(2));
                setIsConnecting(false);
            };
            const disconnectWallet = async () => {
                setAccount(null);
            };
            return {
                account,
                contract,
                isConnecting,
                connectWallet,
                disconnectWallet,
            };
        },
    };
});
require("@testing-library/jest-dom");
require("whatwg-fetch");
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL3NheWFudGFucGFsMTAwL0Rlc2t0b3AvTXVtdS0tb25jaGFpbi1wdXp6bGUtZ2FtZS9mcm9udGVuZC9zcmMvc2V0dXBUZXN0cy50cyIsIm1hcHBpbmdzIjoiOztBQUVBLHlFQUF5RTtBQUN6RSxJQUFJLENBQUMsSUFBSSxDQUFDLHFCQUFxQixFQUFFLEdBQUcsRUFBRTtJQUNwQyxNQUFNLEtBQUssR0FBRyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDL0IsT0FBTztRQUNMLFdBQVcsRUFBRSxHQUFHLEVBQUU7WUFDaEIsTUFBTSxDQUFDLE9BQU8sRUFBRSxVQUFVLENBQUMsR0FBRyxLQUFLLENBQUMsUUFBUSxDQUMxQyxJQUFJLEdBQUcsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQzNDLENBQUM7WUFDRixNQUFNLENBQUMsUUFBUSxDQUFDLEdBQUcsS0FBSyxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQztZQUN0QyxNQUFNLENBQUMsWUFBWSxFQUFFLGVBQWUsQ0FBQyxHQUFHLEtBQUssQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUM7WUFFOUQsTUFBTSxhQUFhLEdBQUcsS0FBSyxJQUFJLEVBQUU7Z0JBQy9CLGVBQWUsQ0FBQyxJQUFJLENBQUMsQ0FBQztnQkFDdEIsVUFBVSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUN2RCxlQUFlLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDekIsQ0FBQyxDQUFDO1lBRUYsTUFBTSxnQkFBZ0IsR0FBRyxLQUFLLElBQUksRUFBRTtnQkFDbEMsVUFBVSxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQ25CLENBQUMsQ0FBQztZQUVGLE9BQU87Z0JBQ0wsT0FBTztnQkFDUCxRQUFRO2dCQUNSLFlBQVk7Z0JBQ1osYUFBYTtnQkFDYixnQkFBZ0I7YUFDakIsQ0FBQztRQUNKLENBQUM7S0FDRixDQUFDO0FBQ0osQ0FBQyxDQUFDLENBQUM7QUFoQ0gscUNBQW1DO0FBQ25DLHdCQUFzQiIsIm5hbWVzIjpbXSwic291cmNlcyI6WyIvVXNlcnMvc2F5YW50YW5wYWwxMDAvRGVza3RvcC9NdW11LS1vbmNoYWluLXB1enpsZS1nYW1lL2Zyb250ZW5kL3NyYy9zZXR1cFRlc3RzLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAnQHRlc3RpbmctbGlicmFyeS9qZXN0LWRvbSc7XG5pbXBvcnQgJ3doYXR3Zy1mZXRjaCc7XG4vLyBNb2NrIHVzZVN0YXJrbmV0IGhvb2sgdG8gcHJldmVudCBTdGFya25ldCB3YWxsZXQgZXJyb3JzIGR1cmluZyB0ZXN0aW5nXG5qZXN0Lm1vY2soJy4vaG9va3MvdXNlU3RhcmtuZXQnLCAoKSA9PiB7XG4gIGNvbnN0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbiAgcmV0dXJuIHtcbiAgICB1c2VTdGFya25ldDogKCkgPT4ge1xuICAgICAgY29uc3QgW2FjY291bnQsIHNldEFjY291bnRdID0gUmVhY3QudXNlU3RhdGU8c3RyaW5nIHwgbnVsbD4oXG4gICAgICAgICcweCcgKyBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDE2KS5zbGljZSgyKVxuICAgICAgKTtcbiAgICAgIGNvbnN0IFtjb250cmFjdF0gPSBSZWFjdC51c2VTdGF0ZSh7fSk7XG4gICAgICBjb25zdCBbaXNDb25uZWN0aW5nLCBzZXRJc0Nvbm5lY3RpbmddID0gUmVhY3QudXNlU3RhdGUoZmFsc2UpO1xuXG4gICAgICBjb25zdCBjb25uZWN0V2FsbGV0ID0gYXN5bmMgKCkgPT4ge1xuICAgICAgICBzZXRJc0Nvbm5lY3RpbmcodHJ1ZSk7XG4gICAgICAgIHNldEFjY291bnQoJzB4JyArIE1hdGgucmFuZG9tKCkudG9TdHJpbmcoMTYpLnNsaWNlKDIpKTtcbiAgICAgICAgc2V0SXNDb25uZWN0aW5nKGZhbHNlKTtcbiAgICAgIH07XG5cbiAgICAgIGNvbnN0IGRpc2Nvbm5lY3RXYWxsZXQgPSBhc3luYyAoKSA9PiB7XG4gICAgICAgIHNldEFjY291bnQobnVsbCk7XG4gICAgICB9O1xuXG4gICAgICByZXR1cm4ge1xuICAgICAgICBhY2NvdW50LFxuICAgICAgICBjb250cmFjdCxcbiAgICAgICAgaXNDb25uZWN0aW5nLFxuICAgICAgICBjb25uZWN0V2FsbGV0LFxuICAgICAgICBkaXNjb25uZWN0V2FsbGV0LFxuICAgICAgfTtcbiAgICB9LFxuICB9O1xufSk7Il0sInZlcnNpb24iOjN9