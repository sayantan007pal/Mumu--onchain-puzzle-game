{"file":"/Users/sayantanpal100/Desktop/Mumu--onchain-puzzle-game/frontend/src/__tests__/App.enhancements.test.tsx","mappings":";;;AAAA,iCAA0B;AAC1B,kDAAiE;AACjE,gCAAyB;AAEzB,QAAQ,CAAC,wBAAwB,EAAE,GAAG,EAAE;IACtC,EAAE,CAAC,0CAA0C,EAAE,KAAK,IAAI,EAAE;QACxD,IAAA,cAAM,EAAC,uBAAC,aAAG,KAAG,CAAC,CAAC;QAChB,MAAM,IAAA,eAAO,EAAC,GAAG,EAAE,CAAC,cAAM,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;QAC/C,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC;QACtD,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;IACxE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gCAAgC,EAAE,KAAK,IAAI,EAAE;QAC9C,YAAY,CAAC,KAAK,EAAE,CAAC;QACrB,IAAA,cAAM,EAAC,uBAAC,aAAG,KAAG,CAAC,CAAC;QAChB,MAAM,IAAA,eAAO,EAAC,GAAG,EAAE,CAAC,cAAM,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC,CAAC;QAC1D,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,UAAU,EAAE,CAAC;IACvD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mDAAmD,EAAE,GAAG,EAAE;QAC3D,IAAA,cAAM,EAAC,uBAAC,aAAG,KAAG,CAAC,CAAC;QAChB,MAAM,CAAC,cAAM,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC;IAC5D,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gCAAgC,EAAE,GAAG,EAAE;QACxC,MAAM,CAAC,UAAU,GAAG,GAAG,CAAC;QACxB,MAAM,CAAC,aAAa,CAAC,IAAI,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;QAC1C,IAAA,cAAM,EAAC,uBAAC,aAAG,KAAG,CAAC,CAAC;QAChB,MAAM,CAAC,cAAM,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;IAC5D,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,oDAAoD,EAAE,KAAK,IAAI,EAAE;QAClE,IAAA,cAAM,EAAC,uBAAC,aAAG,KAAG,CAAC,CAAC;QAChB,MAAM,IAAA,eAAO,EAAC,GAAG,EAAE,CAAC,cAAM,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC,CAAC;QAC1D,MAAM,CAAC,cAAM,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC;IACnE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,+CAA+C,EAAE,GAAG,EAAE;QACvD,IAAA,cAAM,EAAC,uBAAC,aAAG,KAAG,CAAC,CAAC;QAChB,MAAM,CAAC,cAAM,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC;IACnE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,2BAA2B,EAAE,GAAG,EAAE;QACnC,IAAA,cAAM,EAAC,uBAAC,aAAG,KAAG,CAAC,CAAC;QAChB,MAAM,CAAC,cAAM,CAAC,WAAW,CAAC,iBAAiB,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC;IACpE,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","names":[],"sources":["/Users/sayantanpal100/Desktop/Mumu--onchain-puzzle-game/frontend/src/__tests__/App.enhancements.test.tsx"],"sourcesContent":["import React from 'react';\nimport { render, screen, waitFor } from '@testing-library/react';\nimport App from '../App';\n\ndescribe('App UI/UX enhancements', () => {\n  it('shows a toast or notification for errors', async () => {\n    render(<App />);\n    await waitFor(() => screen.getByRole('alert'));\n    expect(screen.getByRole('alert')).toBeInTheDocument();\n    expect(screen.getByRole('alert').textContent).toMatch(/mock puzzle/i);\n  });\n\n  it('caches puzzles in localStorage', async () => {\n    localStorage.clear();\n    render(<App />);\n    await waitFor(() => screen.getByText(/select a puzzle/i));\n    expect(localStorage.getItem('puzzles')).toBeTruthy();\n  });\n\n  it('shows a spinner or skeleton loader during loading', () => {\n    render(<App />);\n    expect(screen.getByTestId('spinner')).toBeInTheDocument();\n  });\n\n  it('renders responsively on mobile', () => {\n    global.innerWidth = 375;\n    global.dispatchEvent(new Event('resize'));\n    render(<App />);\n    expect(screen.getByTestId('app-container')).toBeVisible();\n  });\n\n  it('has accessible ARIA labels and keyboard navigation', async () => {\n    render(<App />);\n    await waitFor(() => screen.getByLabelText(/game board/i));\n    expect(screen.getByLabelText(/game board/i)).toBeInTheDocument();\n  });\n\n  it('allows toggling between mock and backend mode', () => {\n    render(<App />);\n    expect(screen.getByTestId('toggle-backend')).toBeInTheDocument();\n  });\n\n  it('supports dark mode toggle', () => {\n    render(<App />);\n    expect(screen.getByTestId('toggle-darkmode')).toBeInTheDocument();\n  });\n});\n"],"version":3}