a61edda78628670ec228d8787068543f
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _react = _interopRequireDefault(require("react"));
var _GameTypes = require("../types/GameTypes");
require("../styles/FormulaDisplay.css");
function _interopRequireDefault(e) { return e && e.__esModule ? e : { "default": e }; }
// Ensure this path is correct

var FormulaDisplay = function FormulaDisplay(_ref) {
  var formula = _ref.formula;
  // DEV/TEST: If formula is a string (mock/test mode), just render it as text
  if (typeof formula === 'string') {
    return /*#__PURE__*/_react["default"].createElement("div", {
      className: "formula-display formula-string"
    }, formula);
  }
  var getMatterSymbol = function getMatterSymbol(type) {
    switch (type) {
      case _GameTypes.MatterType.EARTH:
        return 'ðŸŸ¤';
      case _GameTypes.MatterType.WATER:
        return 'ðŸŸ¦';
      case _GameTypes.MatterType.FIRE:
        return 'ðŸŸ¥';
      case _GameTypes.MatterType.AIR:
        return 'â¬œ';
      case _GameTypes.MatterType.VOID:
        return 'â¬›';
      default:
        return '?';
    }
  };
  var _renderCondition = function renderCondition(condition) {
    if (condition.type !== undefined) {
      return /*#__PURE__*/_react["default"].createElement("span", {
        className: "matter-symbol"
      }, getMatterSymbol(condition.type));
    } else if (condition.operator) {
      return /*#__PURE__*/_react["default"].createElement("div", {
        className: "formula-group"
      }, _renderCondition(condition.left), /*#__PURE__*/_react["default"].createElement("span", {
        className: "operator"
      }, condition.operator), condition.quantity && /*#__PURE__*/_react["default"].createElement("span", {
        className: "quantity"
      }, condition.quantity), condition.right && _renderCondition(condition.right));
    }
    return null;
  };
  return /*#__PURE__*/_react["default"].createElement("div", {
    className: "formula-display"
  }, /*#__PURE__*/_react["default"].createElement("div", {
    className: "formula-condition"
  }, _renderCondition(formula.condition)), /*#__PURE__*/_react["default"].createElement("div", {
    className: "formula-arrow"
  }, "\u2192"), /*#__PURE__*/_react["default"].createElement("div", {
    className: "formula-result"
  }, /*#__PURE__*/_react["default"].createElement("span", {
    className: "matter-symbol"
  }, getMatterSymbol(formula.result))));
};
var _default = exports["default"] = FormulaDisplay;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9HYW1lVHlwZXMiLCJlIiwiX19lc01vZHVsZSIsIkZvcm11bGFEaXNwbGF5IiwiX3JlZiIsImZvcm11bGEiLCJjcmVhdGVFbGVtZW50IiwiY2xhc3NOYW1lIiwiZ2V0TWF0dGVyU3ltYm9sIiwidHlwZSIsIk1hdHRlclR5cGUiLCJFQVJUSCIsIldBVEVSIiwiRklSRSIsIkFJUiIsIlZPSUQiLCJyZW5kZXJDb25kaXRpb24iLCJjb25kaXRpb24iLCJ1bmRlZmluZWQiLCJvcGVyYXRvciIsImxlZnQiLCJxdWFudGl0eSIsInJpZ2h0IiwicmVzdWx0IiwiX2RlZmF1bHQiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiRm9ybXVsYURpc3BsYXkudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBGb3JtdWxhLCBNYXR0ZXJUeXBlIH0gZnJvbSAnLi4vdHlwZXMvR2FtZVR5cGVzJzsgLy8gRW5zdXJlIHRoaXMgcGF0aCBpcyBjb3JyZWN0XG5pbXBvcnQgJy4uL3N0eWxlcy9Gb3JtdWxhRGlzcGxheS5jc3MnO1xuXG5pbnRlcmZhY2UgRm9ybXVsYURpc3BsYXlQcm9wcyB7XG4gIGZvcm11bGE6IEZvcm11bGEgfCBzdHJpbmc7XG59XG5cbmNvbnN0IEZvcm11bGFEaXNwbGF5OiBSZWFjdC5GQzxGb3JtdWxhRGlzcGxheVByb3BzPiA9ICh7IGZvcm11bGEgfSkgPT4ge1xuICAvLyBERVYvVEVTVDogSWYgZm9ybXVsYSBpcyBhIHN0cmluZyAobW9jay90ZXN0IG1vZGUpLCBqdXN0IHJlbmRlciBpdCBhcyB0ZXh0XG4gIGlmICh0eXBlb2YgZm9ybXVsYSA9PT0gJ3N0cmluZycpIHtcbiAgICByZXR1cm4gPGRpdiBjbGFzc05hbWU9XCJmb3JtdWxhLWRpc3BsYXkgZm9ybXVsYS1zdHJpbmdcIj57Zm9ybXVsYX08L2Rpdj47XG4gIH1cblxuICBjb25zdCBnZXRNYXR0ZXJTeW1ib2wgPSAodHlwZTogTWF0dGVyVHlwZSk6IHN0cmluZyA9PiB7XG4gICAgc3dpdGNoICh0eXBlKSB7XG4gICAgICBjYXNlIE1hdHRlclR5cGUuRUFSVEg6XG4gICAgICAgIHJldHVybiAn8J+fpCc7XG4gICAgICBjYXNlIE1hdHRlclR5cGUuV0FURVI6XG4gICAgICAgIHJldHVybiAn8J+fpic7XG4gICAgICBjYXNlIE1hdHRlclR5cGUuRklSRTpcbiAgICAgICAgcmV0dXJuICfwn5+lJztcbiAgICAgIGNhc2UgTWF0dGVyVHlwZS5BSVI6XG4gICAgICAgIHJldHVybiAn4qycJztcbiAgICAgIGNhc2UgTWF0dGVyVHlwZS5WT0lEOlxuICAgICAgICByZXR1cm4gJ+Ksmyc7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICByZXR1cm4gJz8nO1xuICAgIH1cbiAgfTtcblxuICBjb25zdCByZW5kZXJDb25kaXRpb24gPSAoY29uZGl0aW9uOiBhbnkpID0+IHtcbiAgICBpZiAoY29uZGl0aW9uLnR5cGUgIT09IHVuZGVmaW5lZCkge1xuICAgICAgcmV0dXJuIDxzcGFuIGNsYXNzTmFtZT1cIm1hdHRlci1zeW1ib2xcIj57Z2V0TWF0dGVyU3ltYm9sKGNvbmRpdGlvbi50eXBlKX08L3NwYW4+O1xuICAgIH0gZWxzZSBpZiAoY29uZGl0aW9uLm9wZXJhdG9yKSB7XG4gICAgICByZXR1cm4gKFxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZvcm11bGEtZ3JvdXBcIj5cbiAgICAgICAgICB7cmVuZGVyQ29uZGl0aW9uKGNvbmRpdGlvbi5sZWZ0KX1cbiAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJvcGVyYXRvclwiPntjb25kaXRpb24ub3BlcmF0b3J9PC9zcGFuPlxuICAgICAgICAgIHtjb25kaXRpb24ucXVhbnRpdHkgJiYgKFxuICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwicXVhbnRpdHlcIj57Y29uZGl0aW9uLnF1YW50aXR5fTwvc3Bhbj5cbiAgICAgICAgICApfVxuICAgICAgICAgIHtjb25kaXRpb24ucmlnaHQgJiYgcmVuZGVyQ29uZGl0aW9uKGNvbmRpdGlvbi5yaWdodCl9XG4gICAgICAgIDwvZGl2PlxuICAgICAgKTtcbiAgICB9XG4gICAgcmV0dXJuIG51bGw7XG4gIH07XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT1cImZvcm11bGEtZGlzcGxheVwiPlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJmb3JtdWxhLWNvbmRpdGlvblwiPlxuICAgICAgICB7cmVuZGVyQ29uZGl0aW9uKGZvcm11bGEuY29uZGl0aW9uKX1cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJmb3JtdWxhLWFycm93XCI+4oaSPC9kaXY+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImZvcm11bGEtcmVzdWx0XCI+XG4gICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cIm1hdHRlci1zeW1ib2xcIj57Z2V0TWF0dGVyU3ltYm9sKGZvcm11bGEucmVzdWx0IGFzIE1hdHRlclR5cGUpfTwvc3Bhbj5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgRm9ybXVsYURpc3BsYXk7Il0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxJQUFBQSxNQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBQyxVQUFBLEdBQUFELE9BQUE7QUFDQUEsT0FBQTtBQUFzQyxTQUFBRCx1QkFBQUcsQ0FBQSxXQUFBQSxDQUFBLElBQUFBLENBQUEsQ0FBQUMsVUFBQSxHQUFBRCxDQUFBLGdCQUFBQSxDQUFBO0FBRG9COztBQU8xRCxJQUFNRSxjQUE2QyxHQUFHLFNBQWhEQSxjQUE2Q0EsQ0FBQUMsSUFBQSxFQUFvQjtFQUFBLElBQWRDLE9BQU8sR0FBQUQsSUFBQSxDQUFQQyxPQUFPO0VBQzlEO0VBQ0EsSUFBSSxPQUFPQSxPQUFPLEtBQUssUUFBUSxFQUFFO0lBQy9CLG9CQUFPUixNQUFBLFlBQUFTLGFBQUE7TUFBS0MsU0FBUyxFQUFDO0lBQWdDLEdBQUVGLE9BQWEsQ0FBQztFQUN4RTtFQUVBLElBQU1HLGVBQWUsR0FBRyxTQUFsQkEsZUFBZUEsQ0FBSUMsSUFBZ0IsRUFBYTtJQUNwRCxRQUFRQSxJQUFJO01BQ1YsS0FBS0MscUJBQVUsQ0FBQ0MsS0FBSztRQUNuQixPQUFPLElBQUk7TUFDYixLQUFLRCxxQkFBVSxDQUFDRSxLQUFLO1FBQ25CLE9BQU8sSUFBSTtNQUNiLEtBQUtGLHFCQUFVLENBQUNHLElBQUk7UUFDbEIsT0FBTyxJQUFJO01BQ2IsS0FBS0gscUJBQVUsQ0FBQ0ksR0FBRztRQUNqQixPQUFPLEdBQUc7TUFDWixLQUFLSixxQkFBVSxDQUFDSyxJQUFJO1FBQ2xCLE9BQU8sR0FBRztNQUNaO1FBQ0UsT0FBTyxHQUFHO0lBQ2Q7RUFDRixDQUFDO0VBRUQsSUFBTUMsZ0JBQWUsR0FBRyxTQUFsQkEsZUFBZUEsQ0FBSUMsU0FBYyxFQUFLO0lBQzFDLElBQUlBLFNBQVMsQ0FBQ1IsSUFBSSxLQUFLUyxTQUFTLEVBQUU7TUFDaEMsb0JBQU9yQixNQUFBLFlBQUFTLGFBQUE7UUFBTUMsU0FBUyxFQUFDO01BQWUsR0FBRUMsZUFBZSxDQUFDUyxTQUFTLENBQUNSLElBQUksQ0FBUSxDQUFDO0lBQ2pGLENBQUMsTUFBTSxJQUFJUSxTQUFTLENBQUNFLFFBQVEsRUFBRTtNQUM3QixvQkFDRXRCLE1BQUEsWUFBQVMsYUFBQTtRQUFLQyxTQUFTLEVBQUM7TUFBZSxHQUMzQlMsZ0JBQWUsQ0FBQ0MsU0FBUyxDQUFDRyxJQUFJLENBQUMsZUFDaEN2QixNQUFBLFlBQUFTLGFBQUE7UUFBTUMsU0FBUyxFQUFDO01BQVUsR0FBRVUsU0FBUyxDQUFDRSxRQUFlLENBQUMsRUFDckRGLFNBQVMsQ0FBQ0ksUUFBUSxpQkFDakJ4QixNQUFBLFlBQUFTLGFBQUE7UUFBTUMsU0FBUyxFQUFDO01BQVUsR0FBRVUsU0FBUyxDQUFDSSxRQUFlLENBQ3RELEVBQ0FKLFNBQVMsQ0FBQ0ssS0FBSyxJQUFJTixnQkFBZSxDQUFDQyxTQUFTLENBQUNLLEtBQUssQ0FDaEQsQ0FBQztJQUVWO0lBQ0EsT0FBTyxJQUFJO0VBQ2IsQ0FBQztFQUVELG9CQUNFekIsTUFBQSxZQUFBUyxhQUFBO0lBQUtDLFNBQVMsRUFBQztFQUFpQixnQkFDOUJWLE1BQUEsWUFBQVMsYUFBQTtJQUFLQyxTQUFTLEVBQUM7RUFBbUIsR0FDL0JTLGdCQUFlLENBQUNYLE9BQU8sQ0FBQ1ksU0FBUyxDQUMvQixDQUFDLGVBQ05wQixNQUFBLFlBQUFTLGFBQUE7SUFBS0MsU0FBUyxFQUFDO0VBQWUsR0FBQyxRQUFNLENBQUMsZUFDdENWLE1BQUEsWUFBQVMsYUFBQTtJQUFLQyxTQUFTLEVBQUM7RUFBZ0IsZ0JBQzdCVixNQUFBLFlBQUFTLGFBQUE7SUFBTUMsU0FBUyxFQUFDO0VBQWUsR0FBRUMsZUFBZSxDQUFDSCxPQUFPLENBQUNrQixNQUFvQixDQUFRLENBQ2xGLENBQ0YsQ0FBQztBQUVWLENBQUM7QUFBQyxJQUFBQyxRQUFBLEdBQUFDLE9BQUEsY0FFYXRCLGNBQWMiLCJpZ25vcmVMaXN0IjpbXX0=