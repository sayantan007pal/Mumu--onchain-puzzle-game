{"file":"/Users/sayantanpal100/Desktop/Mumu--onchain-puzzle-game/frontend/src/hooks/useBackendFallback.ts","mappings":"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","names":[],"sources":["/Users/sayantanpal100/Desktop/Mumu--onchain-puzzle-game/frontend/src/hooks/useBackendFallback.ts"],"sourcesContent":["import { useState, useCallback } from 'react';\n\nconst BACKEND_URL = 'http://localhost:5000'; // Change if deployed elsewhere\n\ntype Grid = number[][];\ntype Formula = { input: number; output: number };\n\ntype OnchainFns = {\n  move: (grid: Grid, width: number, height: number, x: number, y: number, direction: number) => Promise<Grid>;\n  applyFormula: (grid: Grid, width: number, height: number, formula: Formula) => Promise<Grid>;\n  checkCompletion: (grid: Grid, target: Grid) => Promise<boolean>;\n};\n\nasync function backendMove(\n  grid: Grid,\n  width: number,\n  height: number,\n  x: number,\n  y: number,\n  direction: number\n): Promise<Grid> {\n  const res = await fetch(`${BACKEND_URL}/move`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ grid, width, height, x, y, direction }),\n  });\n  return (await res.json()).grid;\n}\n\nasync function backendApplyFormula(\n  grid: Grid,\n  width: number,\n  height: number,\n  formula: Formula\n): Promise<Grid> {\n  const res = await fetch(`${BACKEND_URL}/apply_formula`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ grid, width, height, formula }),\n  });\n  return (await res.json()).grid;\n}\n\nasync function backendCheckCompletion(\n  grid: Grid,\n  target: Grid\n): Promise<boolean> {\n  const res = await fetch(`${BACKEND_URL}/check_completion`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ grid, target }),\n  });\n  return (await res.json()).completed;\n}\n\nexport function useBackendFallback(\n  connectWalletFn: () => Promise<void>,\n  onchainFns: OnchainFns\n) {\n  // onchainFns: { move, applyFormula, checkCompletion }\n  const [useBackend, setUseBackend] = useState(false);\n\n  // Try to connect wallet, fallback if fails\n  const tryConnectWallet = useCallback(async () => {\n    try {\n      await connectWalletFn();\n      setUseBackend(false);\n      return true;\n    } catch (e) {\n      setUseBackend(true);\n      return false;\n    }\n  }, [connectWalletFn]);\n\n  // Move\n  const move = useCallback(\n    async (grid: Grid, width: number, height: number, x: number, y: number, direction: number) => {\n      if (useBackend) {\n        return backendMove(grid, width, height, x, y, direction);\n      } else {\n        return onchainFns.move(grid, width, height, x, y, direction);\n      }\n    },\n    [useBackend, onchainFns]\n  );\n\n  // Apply formula\n  const applyFormula = useCallback(\n    async (grid: Grid, width: number, height: number, formula: Formula) => {\n      if (useBackend) {\n        return backendApplyFormula(grid, width, height, formula);\n      } else {\n        return onchainFns.applyFormula(grid, width, height, formula);\n      }\n    },\n    [useBackend, onchainFns]\n  );\n\n  // Check completion\n  const checkCompletion = useCallback(\n    async (grid: Grid, target: Grid) => {\n      if (useBackend) {\n        return backendCheckCompletion(grid, target);\n      } else {\n        return onchainFns.checkCompletion(grid, target);\n      }\n    },\n    [useBackend, onchainFns]\n  );\n\n  return {\n    useBackend,\n    tryConnectWallet,\n    move,\n    applyFormula,\n    checkCompletion,\n  };\n} "],"version":3}