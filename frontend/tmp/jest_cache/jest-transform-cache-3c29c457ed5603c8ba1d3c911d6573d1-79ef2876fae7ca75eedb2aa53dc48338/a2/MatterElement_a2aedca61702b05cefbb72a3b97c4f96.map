{"file":"/Users/sayantanpal100/Desktop/Mumu--onchain-puzzle-game/frontend/src/components/MatterElement.tsx","mappings":";;;AAAA,iCAA0B;AAC1B,wDAAmD;AACnD,uCAAqC;AAUrC,MAAM,aAAa,GAAiC,CAAC,EACnD,IAAI,EACJ,CAAC,EACD,CAAC,EACD,UAAU,EACV,OAAO,EACR,EAAE,EAAE;IACH,MAAM,eAAe,GAAG,GAAW,EAAE;QACnC,QAAQ,IAAI,EAAE,CAAC;YACb,KAAK,yBAAU,CAAC,KAAK;gBACnB,OAAO,eAAe,CAAC;YACzB,KAAK,yBAAU,CAAC,KAAK;gBACnB,OAAO,eAAe,CAAC;YACzB,KAAK,yBAAU,CAAC,IAAI;gBAClB,OAAO,cAAc,CAAC;YACxB,KAAK,yBAAU,CAAC,GAAG;gBACjB,OAAO,aAAa,CAAC;YACvB,KAAK,yBAAU,CAAC,IAAI,CAAC;YACrB;gBACE,OAAO,cAAc,CAAC;QAC1B,CAAC;IACH,CAAC,CAAC;IAEF,MAAM,gBAAgB,GAAG,GAAW,EAAE;QACpC,QAAQ,IAAI,EAAE,CAAC;YACb,KAAK,yBAAU,CAAC,KAAK;gBACnB,OAAO,IAAI,CAAC;YACd,KAAK,yBAAU,CAAC,KAAK;gBACnB,OAAO,IAAI,CAAC;YACd,KAAK,yBAAU,CAAC,IAAI;gBAClB,OAAO,IAAI,CAAC;YACd,KAAK,yBAAU,CAAC,GAAG;gBACjB,OAAO,GAAG,CAAC;YACb,KAAK,yBAAU,CAAC,IAAI,CAAC;YACrB;gBACE,OAAO,GAAG,CAAC;QACf,CAAC;IACH,CAAC,CAAC;IAEF,OAAO,CACL,gCACE,SAAS,EAAE,kBAAkB,eAAe,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,EAAE,EAChF,OAAO,EAAE,OAAO,YACR,CAAC,YACD,CAAC,YAET,iCAAM,SAAS,EAAC,gBAAgB,YAAE,gBAAgB,EAAE,GAAQ,GACxD,CACP,CAAC;AACJ,CAAC,CAAC;AAEF,kBAAe,aAAa,CAAC","names":[],"sources":["/Users/sayantanpal100/Desktop/Mumu--onchain-puzzle-game/frontend/src/components/MatterElement.tsx"],"sourcesContent":["import React from 'react';\nimport { MatterType } from '../types/GameTypes.ts';\nimport '../styles/MatterElement.css';\n\ninterface MatterElementProps {\n  type: MatterType;\n  x: number;\n  y: number;\n  isSelected: boolean;\n  onClick: () => void;\n}\n\nconst MatterElement: React.FC<MatterElementProps> = ({\n  type,\n  x,\n  y,\n  isSelected,\n  onClick\n}) => {\n  const getElementClass = (): string => {\n    switch (type) {\n      case MatterType.EARTH:\n        return 'element-earth';\n      case MatterType.WATER:\n        return 'element-water';\n      case MatterType.FIRE:\n        return 'element-fire';\n      case MatterType.AIR:\n        return 'element-air';\n      case MatterType.VOID:\n      default:\n        return 'element-void';\n    }\n  };\n\n  const getElementSymbol = (): string => {\n    switch (type) {\n      case MatterType.EARTH:\n        return 'ðŸŸ¤';\n      case MatterType.WATER:\n        return 'ðŸŸ¦';\n      case MatterType.FIRE:\n        return 'ðŸŸ¥';\n      case MatterType.AIR:\n        return 'â¬œ';\n      case MatterType.VOID:\n      default:\n        return 'â¬›';\n    }\n  };\n\n  return (\n    <div \n      className={`matter-element ${getElementClass()} ${isSelected ? 'selected' : ''}`}\n      onClick={onClick}\n      data-x={x}\n      data-y={y}\n    >\n      <span className=\"element-symbol\">{getElementSymbol()}</span>\n    </div>\n  );\n};\n\nexport default MatterElement;"],"version":3}