{"file":"/Users/sayantanpal100/Desktop/Mumu--onchain-puzzle-game/frontend/src/App.tsx","mappings":";;;AAAA,cAAc;AACd,iCAAmD;AACnD,sDAA+C;AAC/C,gEAAyD;AACzD,8DAAuD;AACvD,4BAA0B;AAE1B,MAAM,WAAW,GAAG;IAClB,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7B,UAAU,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC5B,QAAQ,EAAE,CAAC,KAAK,CAAC;CAClB,CAAC;AAIF,MAAM,GAAG,GAAa,GAAG,EAAE;IACzB,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,GAAG,IAAA,gBAAQ,EAAU,eAAe,CAAC,CAAC;IAC3D,MAAM,CAAC,gBAAgB,EAAE,mBAAmB,CAAC,GAAG,IAAA,gBAAQ,EAAgB,CAAC,CAAC,CAAC,CAAC,8BAA8B;IAC1G,MAAM,CAAC,UAAU,EAAE,aAAa,CAAC,GAAG,IAAA,gBAAQ,EAAM,IAAI,CAAC,CAAC;IACxD,MAAM,CAAC,gBAAgB,EAAE,mBAAmB,CAAC,GAAG,IAAA,gBAAQ,EAAC,KAAK,CAAC,CAAC;IAChE,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,IAAA,gBAAQ,EAAgB,IAAI,CAAC,CAAC;IAExD,8DAA8D;IAC9D,IAAA,iBAAS,EAAC,GAAG,EAAE;QACb,IAAI,gBAAgB,KAAK,IAAI,EAAE,CAAC;YAC9B,QAAQ,CAAC,IAAI,CAAC,CAAC;YACf,KAAK,CAAC,gCAAgC,gBAAgB,EAAE,CAAC;iBACtD,IAAI,CAAC,GAAG,CAAC,EAAE;gBACV,IAAI,CAAC,GAAG,CAAC,EAAE;oBAAE,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC;gBAC9C,OAAO,GAAG,CAAC,IAAI,EAAE,CAAC;YACpB,CAAC,CAAC;iBACD,IAAI,CAAC,IAAI,CAAC,EAAE;gBACX,aAAa,CAAC;oBACZ,WAAW,EAAE,IAAI,CAAC,YAAY;oBAC9B,UAAU,EAAE,IAAI,CAAC,WAAW;oBAC5B,QAAQ,EAAE,IAAI,CAAC,QAAQ;iBACxB,CAAC,CAAC;gBACH,OAAO,CAAC,aAAa,CAAC,CAAC;YACzB,CAAC,CAAC;iBACD,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE;gBACb,OAAO,CAAC,KAAK,CAAC,8BAA8B,EAAE,GAAG,CAAC,CAAC;gBACnD,aAAa,CAAC,WAAW,CAAC,CAAC;gBAC3B,OAAO,CAAC,aAAa,CAAC,CAAC;gBACvB,QAAQ,CAAC,yCAAyC,CAAC,CAAC;YACtD,CAAC,CAAC,CAAC;QACP,CAAC;IACH,CAAC,EAAE,CAAC,gBAAgB,CAAC,CAAC,CAAC;IAEvB,MAAM,kBAAkB,GAAG,CAAC,QAAgB,EAAE,EAAE,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC;IAC/E,MAAM,kBAAkB,GAAG,GAAG,EAAE;QAC9B,mBAAmB,CAAC,IAAI,CAAC,CAAC;QAC1B,UAAU,CAAC,GAAG,EAAE;YACd,mBAAmB,CAAC,KAAK,CAAC,CAAC;YAC3B,OAAO,CAAC,eAAe,CAAC,CAAC;YACzB,mBAAmB,CAAC,CAAC,CAAC,CAAC,CAAC,qCAAqC;YAC7D,aAAa,CAAC,IAAI,CAAC,CAAC;QACtB,CAAC,EAAE,IAAI,CAAC,CAAC;IACX,CAAC,CAAC;IAEF,OAAO,CACL,iCAAK,SAAS,EAAC,eAAe,iBAAa,eAAe,aACxD,oCAAQ,SAAS,EAAC,YAAY,aAC5B,gCAAK,SAAS,EAAC,WAAW,EAAC,OAAO,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,eAAe,CAAC,0BAAiB,EACnF,iCAAK,SAAS,EAAC,SAAS,aACtB,mCACE,SAAS,EAAE,IAAI,KAAK,eAAe,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,EACnD,OAAO,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,eAAe,CAAC,qBAGhC,EACT,mCACE,SAAS,EAAE,IAAI,KAAK,eAAe,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,EACnD,OAAO,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,eAAe,CAAC,uBAGhC,IACL,EACN,iCAAK,SAAS,EAAC,aAAa,aAC1B,kDAAoB,gBAAgB,EAAC,OAAO,EAAE,GAAG,EAAE,GAAE,CAAC,6BAAuB,EAC7E,kDAAoB,iBAAiB,EAAC,OAAO,EAAE,GAAG,EAAE,GAAE,CAAC,0BAAoB,IACvE,IACC,EACT,kCAAM,SAAS,EAAC,aAAa,aAC1B,KAAK,IAAI,CACR,gCAAK,IAAI,EAAC,OAAO,EAAC,KAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,YAAY,EAAE,EAAE,EAAE,YAAG,KAAK,GAAO,CAC3E,EACA,IAAI,KAAK,eAAe,CAAC,CAAC,CAAC,CAC1B,6DACE,uBAAC,uBAAa,KAAG,EACjB,gCAAK,SAAS,EAAC,gBAAgB,YAC7B,mCAAQ,OAAO,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,eAAe,CAAC,gCAA0B,GACrE,IACL,CACJ,CAAC,CAAC,CAAC,CACF,6DACE,uBAAC,wBAAc,IAAC,cAAc,EAAE,kBAAkB,GAAI,EACtD,gCAAK,SAAS,EAAC,gBAAgB,YAC7B,mCAAQ,OAAO,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,eAAe,CAAC,uCAAiC,GAC5E,EACL,CAAC,UAAU,CAAC,CAAC,CAAC,CACb,gCAAK,SAAS,EAAC,SAAS,kCAAwB,CACjD,CAAC,CAAC,CAAC,CACF,uBAAC,mBAAS,IACR,QAAQ,EAAE,gBAAiB,EAC3B,WAAW,EAAE,UAAU,CAAC,WAAW,EACnC,UAAU,EAAE,UAAU,CAAC,UAAU,EACjC,QAAQ,EAAE,UAAU,CAAC,QAAQ,EAC7B,OAAO,EAAE,kBAAkB,GAC3B,CACH,IACA,CACJ,IACI,EACP,mCAAQ,SAAS,EAAC,YAAY,YAC5B,2FAA2C,GACpC,EACR,gBAAgB,IAAI,CACnB,gCAAK,SAAS,EAAC,eAAe,YAC5B,iCAAK,SAAS,EAAC,uBAAuB,aACpC,sFAA6B,EAC7B,uFAAiD,IAC7C,GACF,CACP,IACG,CACP,CAAC;AACJ,CAAC,CAAC;AAEF,kBAAe,GAAG,CAAC","names":[],"sources":["/Users/sayantanpal100/Desktop/Mumu--onchain-puzzle-game/frontend/src/App.tsx"],"sourcesContent":["// src/App.tsx\nimport React, { useState, useEffect } from 'react';\nimport GameBoard from './components/GameBoard';\nimport PuzzleSelector from './components/PuzzleSelector';\nimport PuzzleCreator from './components/PuzzleCreator';\nimport './styles/App.css';\n\nconst MOCK_PUZZLE = {\n  initialGrid: [[0, 1], [1, 0]],\n  targetGrid: [[1, 1], [1, 1]],\n  formulas: ['A+B'],\n};\n\ntype AppView = 'PUZZLE_SELECT' | 'PUZZLE_PLAY' | 'PUZZLE_CREATE';\n\nconst App: React.FC = () => {\n  const [view, setView] = useState<AppView>('PUZZLE_SELECT');\n  const [selectedPuzzleId, setSelectedPuzzleId] = useState<number | null>(1); // Default to puzzle 1 for dev\n  const [puzzleData, setPuzzleData] = useState<any>(null);\n  const [showSuccessModal, setShowSuccessModal] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  // Always use backend or mock data, with robust error handling\n  useEffect(() => {\n    if (selectedPuzzleId !== null) {\n      setError(null);\n      fetch(`http://localhost:5000/puzzle/${selectedPuzzleId}`)\n        .then(res => {\n          if (!res.ok) throw new Error('Backend error');\n          return res.json();\n        })\n        .then(data => {\n          setPuzzleData({\n            initialGrid: data.initial_grid,\n            targetGrid: data.target_grid,\n            formulas: data.formulas,\n          });\n          setView('PUZZLE_PLAY');\n        })\n        .catch((err) => {\n          console.error('Falling back to mock puzzle:', err);\n          setPuzzleData(MOCK_PUZZLE);\n          setView('PUZZLE_PLAY');\n          setError('Backend unavailable, using mock puzzle.');\n        });\n    }\n  }, [selectedPuzzleId]);\n\n  const handlePuzzleSelect = (puzzleId: number) => setSelectedPuzzleId(puzzleId);\n  const handlePuzzleSolved = () => {\n    setShowSuccessModal(true);\n    setTimeout(() => {\n      setShowSuccessModal(false);\n      setView('PUZZLE_SELECT');\n      setSelectedPuzzleId(1); // Always default to puzzle 1 for dev\n      setPuzzleData(null);\n    }, 3000);\n  };\n\n  return (\n    <div className=\"app-container\" data-testid=\"app-container\">\n      <header className=\"app-header\">\n        <div className=\"app-title\" onClick={() => setView('PUZZLE_SELECT')}>MuMu Game</div>\n        <nav className=\"app-nav\">\n          <button\n            className={view === 'PUZZLE_SELECT' ? 'active' : ''}\n            onClick={() => setView('PUZZLE_SELECT')}\n          >\n            Play\n          </button>\n          <button\n            className={view === 'PUZZLE_CREATE' ? 'active' : ''}\n            onClick={() => setView('PUZZLE_CREATE')}\n          >\n            Create\n          </button>\n        </nav>\n        <div className=\"app-toggles\">\n          <button data-testid=\"toggle-backend\" onClick={() => {}}>Backend/Mock</button>\n          <button data-testid=\"toggle-darkmode\" onClick={() => {}}>Dark Mode</button>\n        </div>\n      </header>\n      <main className=\"app-content\">\n        {error && (\n          <div role=\"alert\" style={{ color: 'red', marginBottom: 16 }}>{error}</div>\n        )}\n        {view === 'PUZZLE_CREATE' ? (\n          <>\n            <PuzzleCreator />\n            <div className=\"action-buttons\">\n              <button onClick={() => setView('PUZZLE_SELECT')}>Back to Puzzles</button>\n            </div>\n          </>\n        ) : (\n          <>\n            <PuzzleSelector onSelectPuzzle={handlePuzzleSelect} />\n            <div className=\"action-buttons\">\n              <button onClick={() => setView('PUZZLE_CREATE')}>Create Your Own Puzzle</button>\n            </div>\n            {!puzzleData ? (\n              <div className=\"loading\">Loading puzzle...</div>\n            ) : (\n              <GameBoard\n                puzzleId={selectedPuzzleId!}\n                initialGrid={puzzleData.initialGrid}\n                targetGrid={puzzleData.targetGrid}\n                formulas={puzzleData.formulas}\n                onSolve={handlePuzzleSolved}\n              />\n            )}\n          </>\n        )}\n      </main>\n      <footer className=\"app-footer\">\n        <p>Built on Starknet â€¢ Â© 2025 MuMu Game</p>\n      </footer>\n      {showSuccessModal && (\n        <div className=\"success-modal\">\n          <div className=\"success-modal-content\">\n            <h2>ðŸŽ‰ Puzzle Solved! ðŸŽ‰</h2>\n            <p>Congratulations! You've solved the puzzle.</p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"version":3}