25df17b49f29293668f020d07a8d2501
"use strict";

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _react = _interopRequireWildcard(require("react"));
var _GameBoard = _interopRequireDefault(require("./components/GameBoard"));
var _PuzzleSelector = _interopRequireDefault(require("./components/PuzzleSelector"));
var _PuzzleCreator = _interopRequireDefault(require("./components/PuzzleCreator"));
require("./styles/App.css");
function _interopRequireDefault(e) { return e && e.__esModule ? e : { "default": e }; }
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, "default": e }; if (null === e || "object" != _typeof(e) && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) "default" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }
function _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(r) { if (Array.isArray(r)) return r; } // src/App.tsx
var MOCK_PUZZLE = {
  initialGrid: [[0, 1], [1, 0]],
  targetGrid: [[1, 1], [1, 1]],
  formulas: ['A+B']
};
var App = function App() {
  var _useState = (0, _react.useState)('PUZZLE_SELECT'),
    _useState2 = _slicedToArray(_useState, 2),
    view = _useState2[0],
    setView = _useState2[1];
  var _useState3 = (0, _react.useState)(1),
    _useState4 = _slicedToArray(_useState3, 2),
    selectedPuzzleId = _useState4[0],
    setSelectedPuzzleId = _useState4[1]; // Default to puzzle 1 for dev
  var _useState5 = (0, _react.useState)(null),
    _useState6 = _slicedToArray(_useState5, 2),
    puzzleData = _useState6[0],
    setPuzzleData = _useState6[1];
  var _useState7 = (0, _react.useState)(false),
    _useState8 = _slicedToArray(_useState7, 2),
    showSuccessModal = _useState8[0],
    setShowSuccessModal = _useState8[1];
  var _useState9 = (0, _react.useState)(null),
    _useState0 = _slicedToArray(_useState9, 2),
    error = _useState0[0],
    setError = _useState0[1];

  // Always use backend or mock data, with robust error handling
  (0, _react.useEffect)(function () {
    if (selectedPuzzleId !== null) {
      setError(null);
      fetch("http://localhost:5000/puzzle/".concat(selectedPuzzleId)).then(function (res) {
        if (!res.ok) throw new Error('Backend error');
        return res.json();
      }).then(function (data) {
        setPuzzleData({
          initialGrid: data.initial_grid,
          targetGrid: data.target_grid,
          formulas: data.formulas
        });
        setView('PUZZLE_PLAY');
      })["catch"](function (err) {
        console.error('Falling back to mock puzzle:', err);
        setPuzzleData(MOCK_PUZZLE);
        setView('PUZZLE_PLAY');
        setError('Backend unavailable, using mock puzzle.');
      });
    }
  }, [selectedPuzzleId]);
  var handlePuzzleSelect = function handlePuzzleSelect(puzzleId) {
    return setSelectedPuzzleId(puzzleId);
  };
  var handlePuzzleSolved = function handlePuzzleSolved() {
    setShowSuccessModal(true);
    setTimeout(function () {
      setShowSuccessModal(false);
      setView('PUZZLE_SELECT');
      setSelectedPuzzleId(1); // Always default to puzzle 1 for dev
      setPuzzleData(null);
    }, 3000);
  };
  return /*#__PURE__*/_react["default"].createElement("div", {
    className: "app-container"
  }, /*#__PURE__*/_react["default"].createElement("header", {
    className: "app-header"
  }, /*#__PURE__*/_react["default"].createElement("div", {
    className: "app-title",
    onClick: function onClick() {
      return setView('PUZZLE_SELECT');
    }
  }, "MuMu Game"), /*#__PURE__*/_react["default"].createElement("nav", {
    className: "app-nav"
  }, /*#__PURE__*/_react["default"].createElement("button", {
    className: view === 'PUZZLE_SELECT' ? 'active' : '',
    onClick: function onClick() {
      return setView('PUZZLE_SELECT');
    }
  }, "Play"), /*#__PURE__*/_react["default"].createElement("button", {
    className: view === 'PUZZLE_CREATE' ? 'active' : '',
    onClick: function onClick() {
      return setView('PUZZLE_CREATE');
    }
  }, "Create"))), /*#__PURE__*/_react["default"].createElement("main", {
    className: "app-content"
  }, error && /*#__PURE__*/_react["default"].createElement("div", {
    style: {
      color: 'red',
      marginBottom: 16
    }
  }, error), view === 'PUZZLE_SELECT' && /*#__PURE__*/_react["default"].createElement(_react["default"].Fragment, null, /*#__PURE__*/_react["default"].createElement(_PuzzleSelector["default"], {
    onSelectPuzzle: handlePuzzleSelect
  }), /*#__PURE__*/_react["default"].createElement("div", {
    className: "action-buttons"
  }, /*#__PURE__*/_react["default"].createElement("button", {
    onClick: function onClick() {
      return setView('PUZZLE_CREATE');
    }
  }, "Create Your Own Puzzle"))), view === 'PUZZLE_PLAY' && !puzzleData && /*#__PURE__*/_react["default"].createElement("div", {
    className: "loading"
  }, "Loading puzzle..."), view === 'PUZZLE_PLAY' && puzzleData && /*#__PURE__*/_react["default"].createElement(_GameBoard["default"], {
    puzzleId: selectedPuzzleId,
    initialGrid: puzzleData.initialGrid,
    targetGrid: puzzleData.targetGrid,
    formulas: puzzleData.formulas,
    onSolve: handlePuzzleSolved
  }), view === 'PUZZLE_CREATE' && /*#__PURE__*/_react["default"].createElement(_react["default"].Fragment, null, /*#__PURE__*/_react["default"].createElement(_PuzzleCreator["default"], null), /*#__PURE__*/_react["default"].createElement("div", {
    className: "action-buttons"
  }, /*#__PURE__*/_react["default"].createElement("button", {
    onClick: function onClick() {
      return setView('PUZZLE_SELECT');
    }
  }, "Back to Puzzles")))), /*#__PURE__*/_react["default"].createElement("footer", {
    className: "app-footer"
  }, /*#__PURE__*/_react["default"].createElement("p", null, "Built on Starknet \u2022 \xA9 2025 MuMu Game")), showSuccessModal && /*#__PURE__*/_react["default"].createElement("div", {
    className: "success-modal"
  }, /*#__PURE__*/_react["default"].createElement("div", {
    className: "success-modal-content"
  }, /*#__PURE__*/_react["default"].createElement("h2", null, "\uD83C\uDF89 Puzzle Solved! \uD83C\uDF89"), /*#__PURE__*/_react["default"].createElement("p", null, "Congratulations! You've solved the puzzle."))));
};
var _default = exports["default"] = App;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,