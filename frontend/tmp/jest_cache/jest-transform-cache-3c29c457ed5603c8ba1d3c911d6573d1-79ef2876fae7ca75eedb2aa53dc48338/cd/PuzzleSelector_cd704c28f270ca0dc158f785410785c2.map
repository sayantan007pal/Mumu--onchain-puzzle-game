{"version":3,"names":["_react","_interopRequireWildcard","require","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","_typeof","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","_slicedToArray","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","a","_arrayLikeToArray","toString","slice","constructor","name","Array","from","test","length","l","Symbol","iterator","u","next","done","push","value","isArray","MOCK_PUZZLES","id","creator","difficulty","initialState","formulas","PuzzleSelector","_ref","onSelectPuzzle","_useState","useState","_useState2","puzzles","setPuzzles","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","useEffect","fetch","then","res","ok","Error","json","data","getDifficultyLabel","level","createElement","className","map","puzzle","key","onClick","concat","substring","_default","exports"],"sources":["PuzzleSelector.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../styles/PuzzleSelector.css';\n\ninterface PuzzleSelectorProps {\n  onSelectPuzzle: (puzzleId: number) => void;\n}\n\nexport interface Puzzle {\n  id: number;\n  name: string;\n  creator: string;\n  difficulty: number;\n  initialState: string;\n  formulas: string[];\n}\n\nconst MOCK_PUZZLES: Puzzle[] = [\n  {\n    id: 1,\n    name: 'Demo Puzzle',\n    creator: '0x12345678',\n    difficulty: 1,\n    initialState: '[[0,1],[1,0]]',\n    formulas: ['A+B'],\n  },\n  {\n    id: 2,\n    name: 'Sample Puzzle',\n    creator: '0x87654321',\n    difficulty: 2,\n    initialState: '[[1,0],[0,1]]',\n    formulas: ['A-B'],\n  },\n];\n\nconst PuzzleSelector: React.FC<PuzzleSelectorProps> = ({ onSelectPuzzle }) => {\n  const [puzzles, setPuzzles] = useState<Puzzle[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    // Try to fetch from backend, fallback to mock\n    fetch('http://localhost:5000/puzzles')\n      .then(res => {\n        if (!res.ok) throw new Error('Backend error');\n        return res.json();\n      })\n      .then(data => {\n        setPuzzles(data.puzzles || MOCK_PUZZLES);\n        setLoading(false);\n      })\n      .catch(() => {\n        setPuzzles(MOCK_PUZZLES);\n        setError('Backend unavailable, using mock puzzles.');\n        setLoading(false);\n      });\n  }, []);\n\n  const getDifficultyLabel = (level: number) => {\n    switch (level) {\n      case 1: return 'Easy';\n      case 2: return 'Medium';\n      case 3: return 'Hard';\n      case 4: return 'Expert';\n      default: return 'Unknown';\n    }\n  };\n\n  if (loading) {\n    return <div className=\"loading\">Loading puzzles...</div>;\n  }\n\n  if (error) {\n    return (\n      <div className=\"error-container\">\n        <p className=\"error-message\">{error}</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"puzzle-selector\">\n      <h2>Select a Puzzle</h2>\n      <div className=\"puzzles-grid\">\n        {puzzles.map((puzzle) => (\n          <div\n            key={puzzle.id}\n            className=\"puzzle-card\"\n            onClick={() => onSelectPuzzle(puzzle.id)}\n          >\n            <h3>#{puzzle.id}: {puzzle.name}</h3>\n            <div className=\"puzzle-info\">\n              <span className={`difficulty difficulty-${puzzle.difficulty}`}>\n                {getDifficultyLabel(puzzle.difficulty)}\n              </span>\n            </div>\n            <div className=\"puzzle-creator\">Created by: {puzzle.creator.substring(0, 8)}...</div>\n          </div>\n        ))}\n      </div>\n      {puzzles.length === 0 && (\n        <div className=\"no-puzzles\">\n          <p>No puzzles found. Try again later or create your own!</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PuzzleSelector;"],"mappings":"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","ignoreList":[]}