81a4664459da5277f134fcd3cf63f2d9
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const react_2 = require("@testing-library/react");
const App_1 = require("../App");
describe('App UI/UX enhancements', () => {
    it('shows a toast or notification for errors', async () => {
        (0, react_2.render)((0, jsx_runtime_1.jsx)(App_1.default, {}));
        await (0, react_2.waitFor)(() => react_2.screen.getByRole('alert'));
        expect(react_2.screen.getByRole('alert')).toBeInTheDocument();
        expect(react_2.screen.getByRole('alert').textContent).toMatch(/mock puzzle/i);
    });
    it('caches puzzles in localStorage', async () => {
        localStorage.clear();
        (0, react_2.render)((0, jsx_runtime_1.jsx)(App_1.default, {}));
        await (0, react_2.waitFor)(() => react_2.screen.getByText(/select a puzzle/i));
        expect(localStorage.getItem('puzzles')).toBeTruthy();
    });
    it('shows a spinner or skeleton loader during loading', () => {
        (0, react_2.render)((0, jsx_runtime_1.jsx)(App_1.default, {}));
        expect(react_2.screen.getByTestId('spinner')).toBeInTheDocument();
    });
    it('renders responsively on mobile', () => {
        global.innerWidth = 375;
        global.dispatchEvent(new Event('resize'));
        (0, react_2.render)((0, jsx_runtime_1.jsx)(App_1.default, {}));
        expect(react_2.screen.getByTestId('app-container')).toBeVisible();
    });
    it('has accessible ARIA labels and keyboard navigation', () => {
        (0, react_2.render)((0, jsx_runtime_1.jsx)(App_1.default, {}));
        expect(react_2.screen.getByLabelText(/game board/i)).toBeInTheDocument();
    });
    it('allows toggling between mock and backend mode', () => {
        (0, react_2.render)((0, jsx_runtime_1.jsx)(App_1.default, {}));
        expect(react_2.screen.getByTestId('toggle-backend')).toBeInTheDocument();
    });
    it('supports dark mode toggle', () => {
        (0, react_2.render)((0, jsx_runtime_1.jsx)(App_1.default, {}));
        expect(react_2.screen.getByTestId('toggle-darkmode')).toBeInTheDocument();
    });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL3NheWFudGFucGFsMTAwL0Rlc2t0b3AvTXVtdS0tb25jaGFpbi1wdXp6bGUtZ2FtZS9mcm9udGVuZC9zcmMvX190ZXN0c19fL0FwcC5lbmhhbmNlbWVudHMudGVzdC50c3giLCJtYXBwaW5ncyI6Ijs7O0FBQUEsaUNBQTBCO0FBQzFCLGtEQUFpRTtBQUNqRSxnQ0FBeUI7QUFFekIsUUFBUSxDQUFDLHdCQUF3QixFQUFFLEdBQUcsRUFBRTtJQUN0QyxFQUFFLENBQUMsMENBQTBDLEVBQUUsS0FBSyxJQUFJLEVBQUU7UUFDeEQsSUFBQSxjQUFNLEVBQUMsdUJBQUMsYUFBRyxLQUFHLENBQUMsQ0FBQztRQUNoQixNQUFNLElBQUEsZUFBTyxFQUFDLEdBQUcsRUFBRSxDQUFDLGNBQU0sQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztRQUMvQyxNQUFNLENBQUMsY0FBTSxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLGlCQUFpQixFQUFFLENBQUM7UUFDdEQsTUFBTSxDQUFDLGNBQU0sQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLENBQUMsV0FBVyxDQUFDLENBQUMsT0FBTyxDQUFDLGNBQWMsQ0FBQyxDQUFDO0lBQ3hFLENBQUMsQ0FBQyxDQUFDO0lBRUgsRUFBRSxDQUFDLGdDQUFnQyxFQUFFLEtBQUssSUFBSSxFQUFFO1FBQzlDLFlBQVksQ0FBQyxLQUFLLEVBQUUsQ0FBQztRQUNyQixJQUFBLGNBQU0sRUFBQyx1QkFBQyxhQUFHLEtBQUcsQ0FBQyxDQUFDO1FBQ2hCLE1BQU0sSUFBQSxlQUFPLEVBQUMsR0FBRyxFQUFFLENBQUMsY0FBTSxDQUFDLFNBQVMsQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDLENBQUM7UUFDMUQsTUFBTSxDQUFDLFlBQVksQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxVQUFVLEVBQUUsQ0FBQztJQUN2RCxDQUFDLENBQUMsQ0FBQztJQUVILEVBQUUsQ0FBQyxtREFBbUQsRUFBRSxHQUFHLEVBQUU7UUFDM0QsSUFBQSxjQUFNLEVBQUMsdUJBQUMsYUFBRyxLQUFHLENBQUMsQ0FBQztRQUNoQixNQUFNLENBQUMsY0FBTSxDQUFDLFdBQVcsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLGlCQUFpQixFQUFFLENBQUM7SUFDNUQsQ0FBQyxDQUFDLENBQUM7SUFFSCxFQUFFLENBQUMsZ0NBQWdDLEVBQUUsR0FBRyxFQUFFO1FBQ3hDLE1BQU0sQ0FBQyxVQUFVLEdBQUcsR0FBRyxDQUFDO1FBQ3hCLE1BQU0sQ0FBQyxhQUFhLENBQUMsSUFBSSxLQUFLLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztRQUMxQyxJQUFBLGNBQU0sRUFBQyx1QkFBQyxhQUFHLEtBQUcsQ0FBQyxDQUFDO1FBQ2hCLE1BQU0sQ0FBQyxjQUFNLENBQUMsV0FBVyxDQUFDLGVBQWUsQ0FBQyxDQUFDLENBQUMsV0FBVyxFQUFFLENBQUM7SUFDNUQsQ0FBQyxDQUFDLENBQUM7SUFFSCxFQUFFLENBQUMsb0RBQW9ELEVBQUUsR0FBRyxFQUFFO1FBQzVELElBQUEsY0FBTSxFQUFDLHVCQUFDLGFBQUcsS0FBRyxDQUFDLENBQUM7UUFDaEIsTUFBTSxDQUFDLGNBQU0sQ0FBQyxjQUFjLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQyxpQkFBaUIsRUFBRSxDQUFDO0lBQ25FLENBQUMsQ0FBQyxDQUFDO0lBRUgsRUFBRSxDQUFDLCtDQUErQyxFQUFFLEdBQUcsRUFBRTtRQUN2RCxJQUFBLGNBQU0sRUFBQyx1QkFBQyxhQUFHLEtBQUcsQ0FBQyxDQUFDO1FBQ2hCLE1BQU0sQ0FBQyxjQUFNLENBQUMsV0FBVyxDQUFDLGdCQUFnQixDQUFDLENBQUMsQ0FBQyxpQkFBaUIsRUFBRSxDQUFDO0lBQ25FLENBQUMsQ0FBQyxDQUFDO0lBRUgsRUFBRSxDQUFDLDJCQUEyQixFQUFFLEdBQUcsRUFBRTtRQUNuQyxJQUFBLGNBQU0sRUFBQyx1QkFBQyxhQUFHLEtBQUcsQ0FBQyxDQUFDO1FBQ2hCLE1BQU0sQ0FBQyxjQUFNLENBQUMsV0FBVyxDQUFDLGlCQUFpQixDQUFDLENBQUMsQ0FBQyxpQkFBaUIsRUFBRSxDQUFDO0lBQ3BFLENBQUMsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxDQUFDLENBQUMiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiL1VzZXJzL3NheWFudGFucGFsMTAwL0Rlc2t0b3AvTXVtdS0tb25jaGFpbi1wdXp6bGUtZ2FtZS9mcm9udGVuZC9zcmMvX190ZXN0c19fL0FwcC5lbmhhbmNlbWVudHMudGVzdC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHJlbmRlciwgc2NyZWVuLCB3YWl0Rm9yIH0gZnJvbSAnQHRlc3RpbmctbGlicmFyeS9yZWFjdCc7XG5pbXBvcnQgQXBwIGZyb20gJy4uL0FwcCc7XG5cbmRlc2NyaWJlKCdBcHAgVUkvVVggZW5oYW5jZW1lbnRzJywgKCkgPT4ge1xuICBpdCgnc2hvd3MgYSB0b2FzdCBvciBub3RpZmljYXRpb24gZm9yIGVycm9ycycsIGFzeW5jICgpID0+IHtcbiAgICByZW5kZXIoPEFwcCAvPik7XG4gICAgYXdhaXQgd2FpdEZvcigoKSA9PiBzY3JlZW4uZ2V0QnlSb2xlKCdhbGVydCcpKTtcbiAgICBleHBlY3Qoc2NyZWVuLmdldEJ5Um9sZSgnYWxlcnQnKSkudG9CZUluVGhlRG9jdW1lbnQoKTtcbiAgICBleHBlY3Qoc2NyZWVuLmdldEJ5Um9sZSgnYWxlcnQnKS50ZXh0Q29udGVudCkudG9NYXRjaCgvbW9jayBwdXp6bGUvaSk7XG4gIH0pO1xuXG4gIGl0KCdjYWNoZXMgcHV6emxlcyBpbiBsb2NhbFN0b3JhZ2UnLCBhc3luYyAoKSA9PiB7XG4gICAgbG9jYWxTdG9yYWdlLmNsZWFyKCk7XG4gICAgcmVuZGVyKDxBcHAgLz4pO1xuICAgIGF3YWl0IHdhaXRGb3IoKCkgPT4gc2NyZWVuLmdldEJ5VGV4dCgvc2VsZWN0IGEgcHV6emxlL2kpKTtcbiAgICBleHBlY3QobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3B1enpsZXMnKSkudG9CZVRydXRoeSgpO1xuICB9KTtcblxuICBpdCgnc2hvd3MgYSBzcGlubmVyIG9yIHNrZWxldG9uIGxvYWRlciBkdXJpbmcgbG9hZGluZycsICgpID0+IHtcbiAgICByZW5kZXIoPEFwcCAvPik7XG4gICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRlc3RJZCgnc3Bpbm5lcicpKS50b0JlSW5UaGVEb2N1bWVudCgpO1xuICB9KTtcblxuICBpdCgncmVuZGVycyByZXNwb25zaXZlbHkgb24gbW9iaWxlJywgKCkgPT4ge1xuICAgIGdsb2JhbC5pbm5lcldpZHRoID0gMzc1O1xuICAgIGdsb2JhbC5kaXNwYXRjaEV2ZW50KG5ldyBFdmVudCgncmVzaXplJykpO1xuICAgIHJlbmRlcig8QXBwIC8+KTtcbiAgICBleHBlY3Qoc2NyZWVuLmdldEJ5VGVzdElkKCdhcHAtY29udGFpbmVyJykpLnRvQmVWaXNpYmxlKCk7XG4gIH0pO1xuXG4gIGl0KCdoYXMgYWNjZXNzaWJsZSBBUklBIGxhYmVscyBhbmQga2V5Ym9hcmQgbmF2aWdhdGlvbicsICgpID0+IHtcbiAgICByZW5kZXIoPEFwcCAvPik7XG4gICAgZXhwZWN0KHNjcmVlbi5nZXRCeUxhYmVsVGV4dCgvZ2FtZSBib2FyZC9pKSkudG9CZUluVGhlRG9jdW1lbnQoKTtcbiAgfSk7XG5cbiAgaXQoJ2FsbG93cyB0b2dnbGluZyBiZXR3ZWVuIG1vY2sgYW5kIGJhY2tlbmQgbW9kZScsICgpID0+IHtcbiAgICByZW5kZXIoPEFwcCAvPik7XG4gICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRlc3RJZCgndG9nZ2xlLWJhY2tlbmQnKSkudG9CZUluVGhlRG9jdW1lbnQoKTtcbiAgfSk7XG5cbiAgaXQoJ3N1cHBvcnRzIGRhcmsgbW9kZSB0b2dnbGUnLCAoKSA9PiB7XG4gICAgcmVuZGVyKDxBcHAgLz4pO1xuICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXN0SWQoJ3RvZ2dsZS1kYXJrbW9kZScpKS50b0JlSW5UaGVEb2N1bWVudCgpO1xuICB9KTtcbn0pO1xuIl0sInZlcnNpb24iOjN9