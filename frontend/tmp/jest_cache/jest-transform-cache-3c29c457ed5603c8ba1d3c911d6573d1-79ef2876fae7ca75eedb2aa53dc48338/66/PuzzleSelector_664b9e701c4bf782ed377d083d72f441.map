{"file":"/Users/sayantanpal100/Desktop/Mumu--onchain-puzzle-game/frontend/src/components/PuzzleSelector.tsx","mappings":"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","names":[],"sources":["/Users/sayantanpal100/Desktop/Mumu--onchain-puzzle-game/frontend/src/components/PuzzleSelector.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../styles/PuzzleSelector.css';\n\ninterface PuzzleSelectorProps {\n  onSelectPuzzle: (puzzleId: number) => void;\n}\n\nexport interface Puzzle {\n  id: number;\n  name: string;\n  creator: string;\n  difficulty: number;\n  initialState: string;\n  formulas: string[];\n}\n\nconst MOCK_PUZZLES: Puzzle[] = [\n  {\n    id: 1,\n    name: 'Demo Puzzle',\n    creator: '0x12345678',\n    difficulty: 1,\n    initialState: '[[0,1],[1,0]]',\n    formulas: ['A+B'],\n  },\n  {\n    id: 2,\n    name: 'Sample Puzzle',\n    creator: '0x87654321',\n    difficulty: 2,\n    initialState: '[[1,0],[0,1]]',\n    formulas: ['A-B'],\n  },\n];\n\nconst PuzzleSelector: React.FC<PuzzleSelectorProps> = ({ onSelectPuzzle }) => {\n  const [puzzles, setPuzzles] = useState<Puzzle[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    // Try to fetch from backend, fallback to mock\n    fetch('http://localhost:5000/puzzles')\n      .then(res => {\n        if (!res.ok) throw new Error('Backend error');\n        return res.json();\n      })\n      .then(data => {\n        const puzzlesData = data.puzzles || MOCK_PUZZLES;\n        setPuzzles(puzzlesData);\n        localStorage.setItem('puzzles', JSON.stringify(puzzlesData));\n        setLoading(false);\n      })\n      .catch(() => {\n        setPuzzles(MOCK_PUZZLES);\n        localStorage.setItem('puzzles', JSON.stringify(MOCK_PUZZLES));\n        setError('Backend unavailable, using mock puzzles.');\n        setLoading(false);\n      });\n  }, []);\n\n  const getDifficultyLabel = (level: number) => {\n    switch (level) {\n      case 1: return 'Easy';\n      case 2: return 'Medium';\n      case 3: return 'Hard';\n      case 4: return 'Expert';\n      default: return 'Unknown';\n    }\n  };\n\n  if (loading) {\n    return <div className=\"loading\" data-testid=\"spinner\">Loading all puzzles...</div>;\n  }\n\n  if (error) {\n    return (\n      <div className=\"error-container\">\n        <p className=\"error-message\">{error}</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"puzzle-selector\">\n      <h2>Select a Puzzle</h2>\n      <div className=\"puzzles-grid\">\n        {puzzles.map((puzzle) => (\n          <div\n            key={puzzle.id}\n            className=\"puzzle-card\"\n            onClick={() => onSelectPuzzle(puzzle.id)}\n          >\n            <h3>#{puzzle.id}: {puzzle.name}</h3>\n            <div className=\"puzzle-info\">\n              <span className={`difficulty difficulty-${puzzle.difficulty}`}>\n                {getDifficultyLabel(puzzle.difficulty)}\n              </span>\n            </div>\n            <div className=\"puzzle-creator\">Created by: {puzzle.creator.substring(0, 8)}...</div>\n          </div>\n        ))}\n      </div>\n      {puzzles.length === 0 && (\n        <div className=\"no-puzzles\">\n          <p>No puzzles found. Try again later or create your own!</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PuzzleSelector;"],"version":3}